# -*- mode: shell-script -*-
# shellcheck shell=bash

step::00::wait-for-a-stable-environment() {
    cloud-init::wait-for-stable-environment
}

step::05::setup-abklabs-apt() {
    apt::setup-abk-apt-source
}

step::20::create-sol-user() {
    create-sol-user
}

step::30::copy-assets() {
    svmkit::sudo cp validator-keypair.json {{.Paths.ValidatorIdentityKeypairPath}}
    svmkit::sudo cp vote-account-keypair.json {{.Paths.ValidatorVoteAccountKeypairPath}}
    svmkit::sudo cp config.toml {{.Paths.ConfigPath}}
    svmkit::sudo chown sol:sol {{.Paths.ValidatorIdentityKeypairPath}}
    svmkit::sudo chown sol:sol {{.Paths.ValidatorVoteAccountKeypairPath}}
    svmkit::sudo chown sol:sol {{.Paths.ConfigPath}}

    svmkit::sudo cp svmkit-fd-setup.service {{.Paths.SystemdPath}}/.
    svmkit::sudo cp svmkit-fd-validator.service {{.Paths.SystemdPath}}/.
    svmkit::sudo systemctl daemon-reload
}

step::70::install-validator() {
    svmkit::apt::get --allow-downgrades install "${PACKAGE_LIST[@]}"
}

step::75::setup-solana-cli() {
    [[ -v SOLANA_CLI_CONFIG_FLAGS ]] || return 0

    # First setup the login user.
    solana config set "${SOLANA_CLI_CONFIG_FLAGS[@]}"

    # Setup the sol user.
    svmkit::sudo -u sol -i solana config set "${SOLANA_CLI_CONFIG_FLAGS[@]}"
}

step::80::setup-validator() {
    if systemctl list-unit-files svmkit-fd.service >/dev/null; then
        svmkit::sudo systemctl stop svmkit-fd.service || true
    fi

    svmkit::sudo systemctl enable svmkit-fd-setup.service
    svmkit::sudo systemctl start svmkit-fd-setup.service
    svmkit::sudo systemctl enable svmkit-fd-validator.service
    svmkit::sudo systemctl start svmkit-fd-validator.service
}

# vim:set ft=sh:
